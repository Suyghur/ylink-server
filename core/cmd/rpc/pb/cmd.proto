syntax = "proto3";

option go_package = "./pb";

package pb;

import "google/protobuf/struct.proto";

/**
Player Command Request Bean
 */
message PlayerFetchCsInfoReq{
  string game_id = 1;
  string player_id = 2;
  string cs_id = 3;
}

message PlayerFetchCsInfoResp{
  string cs_id = 1;
  string cs_nickname = 2;
  string cs_avatar_url = 3;
  string cs_signature = 4;
  int32 online_status = 5;
}

message PlayerFetchHistoryMsgReq{
  string game_id = 1;
  string player_id = 2;
  int32 page = 3;
  int32 limit = 4;
}

message PlayerFetchHistoryMsgResp{
  int32 total_page = 1;
  int32 current_page = 2;
  google.protobuf.ListValue list = 3;
}

message PlayerSendMsgReq{
  string game_id = 1;
  string player_id = 2;
  string content = 4;
  string pic = 5;
}

message PlayerSendMsgResp{}

message PlayerDisconnectReq{
  string game_id = 1;
  string player_id = 2;
}

message PlayerDisconnectResp{}

/**
Cs Command Request Bean
 */
message CsFetchPlayerQueueReq{
  int32 limit = 1;
}

message CsFetchPlayerQueueResp{
  int64 total = 1;
  google.protobuf.ListValue list = 2;
}

message CsConnectPlayerReq{
  string cs_id = 1;
  string game_id = 2;
  string player_id = 3;
}

message CsConnectPlayerResp{}

message CsFetchHistoryChatReq{
  string cs_id = 1;
  int32 page = 2;
  int32 limit = 3;
}

message CsFetchHistoryChatResp{
  int32 total_page = 1;
  int32 current_page = 2;
  google.protobuf.ListValue list = 3;
}

message CsFetchHistoryMsgReq{
  string cs_id = 1;
  string game_id = 2;
  string player_id = 3;
  int32 page = 4;
  int32 limit = 5;
}

message CsFetchHistoryMsgResp{
  string cs_id = 1;
  int32 total_page = 2;
  int32 current_page = 3;
  google.protobuf.ListValue list = 4;
}

message CsSendMsgReq{
  string cs_id = 1;
  string game_id = 2;
  string player_id = 3;
  string content = 4;
  string pic = 5;
}

message CsSendMsgResp{}

service Cmd {
  rpc playerFetchCsInfo (PlayerFetchCsInfoReq) returns (PlayerFetchCsInfoResp);
  rpc playerFetchHistoryMsg (PlayerFetchHistoryMsgReq) returns (PlayerFetchHistoryMsgResp);
  rpc playerSendMsg (PlayerSendMsgReq) returns (PlayerSendMsgResp);
  rpc playerDisconnect (PlayerDisconnectReq) returns (PlayerDisconnectResp);

  rpc csFetchPlayerQueue (CsFetchPlayerQueueReq) returns (CsFetchPlayerQueueResp);
  rpc csConnectPlayer (CsConnectPlayerReq) returns (CsConnectPlayerResp);
  rpc csFetchHistoryChat (CsFetchHistoryChatReq) returns (CsFetchHistoryChatResp);
  rpc csFetchHistoryMsg (CsFetchHistoryMsgReq) returns (CsFetchHistoryMsgResp);
  rpc csSendMsg (CsSendMsgReq) returns (CsSendMsgResp);
}