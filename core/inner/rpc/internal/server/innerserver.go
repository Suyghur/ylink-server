// Code generated by goctl. DO NOT EDIT!
// Source: inner.proto

package server

import (
	"context"

	"ylink/core/inner/rpc/internal/logic"
	"ylink/core/inner/rpc/internal/svc"
	"ylink/core/inner/rpc/pb"
)

type InnerServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedInnerServer
}

func NewInnerServer(svcCtx *svc.ServiceContext) *InnerServer {
	return &InnerServer{
		svcCtx: svcCtx,
	}
}

func (s *InnerServer) PlayerFetchCsInfo(ctx context.Context, in *pb.InnerPlayerFetchCsInfoReq) (*pb.InnerPlayerFetchCsInfoResp, error) {
	l := logic.NewPlayerFetchCsInfoLogic(ctx, s.svcCtx)
	return l.PlayerFetchCsInfo(in)
}

func (s *InnerServer) PlayerDisconnect(ctx context.Context, in *pb.InnerPlayerDisconnectReq) (*pb.InnerPlayerDisconnectResp, error) {
	l := logic.NewPlayerDisconnectLogic(ctx, s.svcCtx)
	return l.PlayerDisconnect(in)
}

func (s *InnerServer) CsFetchPlayerQueue(ctx context.Context, in *pb.InnerCsFetchPlayerQueueReq) (*pb.InnerCsFetchPlayerQueueResp, error) {
	l := logic.NewCsFetchPlayerQueueLogic(ctx, s.svcCtx)
	return l.CsFetchPlayerQueue(in)
}

func (s *InnerServer) CsConnectPlayer(ctx context.Context, in *pb.InnerCsConnectPlayerReq) (*pb.InnerCsConnectPlayerResp, error) {
	l := logic.NewCsConnectPlayerLogic(ctx, s.svcCtx)
	return l.CsConnectPlayer(in)
}

func (s *InnerServer) UpdateUserStatus(ctx context.Context, in *pb.UpdateUserStatusReq) (*pb.UpdateUserStatusResp, error) {
	l := logic.NewUpdateUserStatusLogic(ctx, s.svcCtx)
	return l.UpdateUserStatus(in)
}
