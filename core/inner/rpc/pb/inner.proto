syntax = "proto3";

option go_package = "./pb";

package pb;

import "google/protobuf/struct.proto";

/**
Player Command Request Bean
 */
message InnerPlayerFetchCsInfoReq{
  string game_id = 1;
  string player_id = 2;
  string cs_id = 3;
}

message InnerPlayerFetchCsInfoResp{
  string cs_id = 1;
  string cs_nickname = 2;
  string cs_avatar_url = 3;
  string cs_signature = 4;
  int32 online_status = 5;
}

message InnerPlayerDisconnectReq{
  string game_id = 1;
  string player_id = 2;
}

message InnerPlayerDisconnectResp{}

/**
Cs Command Request Bean
 */
message InnerCsFetchPlayerQueueReq {
  int32 limit = 1;
}

message InnerCsFetchPlayerQueueResp{
  int32 total = 1;
  google.protobuf.ListValue list = 2;
}

message InnerCsConnectPlayerReq{
  string cs_id = 1;
  string game_id = 2;
  string player_id = 3;
}

message InnerCsConnectPlayerResp{}

message NotifyUserStatusReq{
  int32 type = 1;
  string game_id = 2;
  string uid = 3;
}

message NotifyUserStatusResp{
  int32 type = 1;
  int32 queue_size = 2;
  string game_id = 3;
  string uid = 4;
  string cs_id = 5;
}

service Inner {
  rpc playerFetchCsInfo (InnerPlayerFetchCsInfoReq) returns (InnerPlayerFetchCsInfoResp);
  rpc playerDisconnect (InnerPlayerDisconnectReq) returns (InnerPlayerDisconnectResp);

  rpc csFetchPlayerQueue (InnerCsFetchPlayerQueueReq) returns (InnerCsFetchPlayerQueueResp);
  rpc csConnectPlayer (InnerCsConnectPlayerReq) returns (InnerCsConnectPlayerResp);

  rpc notifyUserOnline (NotifyUserStatusReq) returns (NotifyUserStatusResp);
  rpc notifyUserOffline (NotifyUserStatusReq) returns (NotifyUserStatusResp);

}