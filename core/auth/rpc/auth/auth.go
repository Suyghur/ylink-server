// Code generated by goctl. DO NOT EDIT!
// Source: auth.proto

package auth

import (
	"context"

	"ylink/core/auth/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AuthResp      = pb.AuthResp
	CheckAuthReq  = pb.CheckAuthReq
	CheckAuthResp = pb.CheckAuthResp
	CsAuthReq     = pb.CsAuthReq
	PlayerAuthReq = pb.PlayerAuthReq

	Auth interface {
		PlayerAuth(ctx context.Context, in *PlayerAuthReq, opts ...grpc.CallOption) (*AuthResp, error)
		CsAuth(ctx context.Context, in *CsAuthReq, opts ...grpc.CallOption) (*AuthResp, error)
		CheckAuth(ctx context.Context, in *CheckAuthReq, opts ...grpc.CallOption) (*CheckAuthResp, error)
	}

	defaultAuth struct {
		cli zrpc.Client
	}
)

func NewAuth(cli zrpc.Client) Auth {
	return &defaultAuth{
		cli: cli,
	}
}

func (m *defaultAuth) PlayerAuth(ctx context.Context, in *PlayerAuthReq, opts ...grpc.CallOption) (*AuthResp, error) {
	client := pb.NewAuthClient(m.cli.Conn())
	return client.PlayerAuth(ctx, in, opts...)
}

func (m *defaultAuth) CsAuth(ctx context.Context, in *CsAuthReq, opts ...grpc.CallOption) (*AuthResp, error) {
	client := pb.NewAuthClient(m.cli.Conn())
	return client.CsAuth(ctx, in, opts...)
}

func (m *defaultAuth) CheckAuth(ctx context.Context, in *CheckAuthReq, opts ...grpc.CallOption) (*CheckAuthResp, error) {
	client := pb.NewAuthClient(m.cli.Conn())
	return client.CheckAuth(ctx, in, opts...)
}
