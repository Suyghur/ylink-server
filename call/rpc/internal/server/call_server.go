// Code generated by goctl. DO NOT EDIT!
// Source: call.proto

package server

import (
	"context"

	"call_center/call/rpc/internal/logic"
	"call_center/call/rpc/internal/svc"
	"call_center/call/rpc/pb"
)

type CallServer struct {
	svcCtx *svc.ServiceContext
}

func NewCallServer(svcCtx *svc.ServiceContext) *CallServer {
	return &CallServer{
		svcCtx: svcCtx,
	}
}

func (s *CallServer) ClientLogin(in *pb.ClientMsgReq, stream pb.Call_ClientLoginServer) error {
	l := logic.NewClientLoginLogic(stream.Context(), s.svcCtx)
	return l.ClientLogin(in, stream)
}

func (s *CallServer) ClientCall(ctx context.Context, in *pb.ClientMsgReq) (*pb.ClientMsgRes, error) {
	l := logic.NewClientCallLogic(ctx, s.svcCtx)
	return l.ClientCall(in)
}

func (s *CallServer) ServiceLogin(in *pb.ServiceMsgReq, stream pb.Call_ServiceLoginServer) error {
	l := logic.NewServiceLoginLogic(stream.Context(), s.svcCtx)
	return l.ServiceLogin(in, stream)
}

func (s *CallServer) ServiceCall(ctx context.Context, in *pb.ServiceMsgReq) (*pb.ServiceMsgRes, error) {
	l := logic.NewServiceCallLogic(ctx, s.svcCtx)
	return l.ServiceCall(in)
}
