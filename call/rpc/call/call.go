// Code generated by goctl. DO NOT EDIT!
// Source: call.proto

package call

import (
	"context"

	"call_center/call/rpc/pb"

	"github.com/tal-tech/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	ClientMsgReq  = pb.ClientMsgReq
	ClientMsgRes  = pb.ClientMsgRes
	ServiceMsgReq = pb.ServiceMsgReq
	ServiceMsgRes = pb.ServiceMsgRes

	Call interface {
		ClientLogin(ctx context.Context, in *ClientMsgReq, opts ...grpc.CallOption) (pb.Call_ClientLoginClient, error)
		ClientCall(ctx context.Context, in *ClientMsgReq, opts ...grpc.CallOption) (*ClientMsgRes, error)
		ServiceLogin(ctx context.Context, in *ServiceMsgReq, opts ...grpc.CallOption) (pb.Call_ServiceLoginClient, error)
		ServiceCall(ctx context.Context, in *ServiceMsgReq, opts ...grpc.CallOption) (*ServiceMsgRes, error)
	}

	defaultCall struct {
		cli zrpc.Client
	}
)

func NewCall(cli zrpc.Client) Call {
	return &defaultCall{
		cli: cli,
	}
}

func (m *defaultCall) ClientLogin(ctx context.Context, in *ClientMsgReq, opts ...grpc.CallOption) (pb.Call_ClientLoginClient, error) {
	client := pb.NewCallClient(m.cli.Conn())
	return client.ClientLogin(ctx, in, opts...)
}

func (m *defaultCall) ClientCall(ctx context.Context, in *ClientMsgReq, opts ...grpc.CallOption) (*ClientMsgRes, error) {
	client := pb.NewCallClient(m.cli.Conn())
	return client.ClientCall(ctx, in, opts...)
}

func (m *defaultCall) ServiceLogin(ctx context.Context, in *ServiceMsgReq, opts ...grpc.CallOption) (pb.Call_ServiceLoginClient, error) {
	client := pb.NewCallClient(m.cli.Conn())
	return client.ServiceLogin(ctx, in, opts...)
}

func (m *defaultCall) ServiceCall(ctx context.Context, in *ServiceMsgReq, opts ...grpc.CallOption) (*ServiceMsgRes, error) {
	client := pb.NewCallClient(m.cli.Conn())
	return client.ServiceCall(ctx, in, opts...)
}
