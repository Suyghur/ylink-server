// Code generated by goctl. DO NOT EDIT!
// Source: rpcbff.proto

package rpcbff

import (
	"context"

	"ylink/bff/rpcbff/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CommandReq  = pb.CommandReq
	CommandResp = pb.CommandResp

	Rpcbff interface {
		Connect(ctx context.Context, in *CommandReq, opts ...grpc.CallOption) (pb.Rpcbff_ConnectClient, error)
		Disconnect(ctx context.Context, in *CommandReq, opts ...grpc.CallOption) (*CommandResp, error)
	}

	defaultRpcbff struct {
		cli zrpc.Client
	}
)

func NewRpcbff(cli zrpc.Client) Rpcbff {
	return &defaultRpcbff{
		cli: cli,
	}
}

func (m *defaultRpcbff) Connect(ctx context.Context, in *CommandReq, opts ...grpc.CallOption) (pb.Rpcbff_ConnectClient, error) {
	client := pb.NewRpcbffClient(m.cli.Conn())
	return client.Connect(ctx, in, opts...)
}

func (m *defaultRpcbff) Disconnect(ctx context.Context, in *CommandReq, opts ...grpc.CallOption) (*CommandResp, error) {
	client := pb.NewRpcbffClient(m.cli.Conn())
	return client.Disconnect(ctx, in, opts...)
}
